{"version":3,"sources":["component-styles/NavLink.module.css","components/UserMenu/UserMenu.module.css","redux/auth/auth-slice.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/Appbar/Appbar.module.css","App.module.css","redux/contactForm/contacts-actions.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/defaultAvatar.jpeg","components/UserMenu/UserMenu.js","components/Appbar/Appbar.js","App.js","redux/contactForm/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isRefreshingUser","errorMessage","extraReducers","authOperations","register","fulfilled","state","action","payload","rejected","logIn","logOut","_","fetchCurrentUser","pending","authSelectors","getIsLoggedIn","auth","getUsername","getIsRefreshingUser","getErrorMessage","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","thunkAPI","a","post","data","rejectWithValue","Error","massage","getState","persistedToken","console","log","get","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","PrivateRoute","children","redirectTo","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","exact","className","s","navLink","activeClassName","navActiveLink","AuthNav","UserMenu","dispatch","useDispatch","userWrapper","src","defaultAvatar","alt","userImg","userWelcome","logOutBtn","onClick","Appbar","header","HomePage","lazy","NoSuchPageView","Registration","Login","ContactsWrapper","App","useEffect","container","fallback","path","component","items","createReducer","filter","contact","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1678fa57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavLink_navLink__2p_y-\",\"navActiveLink\":\"NavLink_navActiveLink__2MuNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"UserMenu_userWrapper__NI5YD\",\"userImg\":\"UserMenu_userImg__1sgqu\",\"userWelcome\":\"UserMenu_userWelcome__26ajr\",\"logOutBtn\":\"UserMenu_logOutBtn__2uBLx\"};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { authOperations } from 'redux/auth';\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isLoggedIn: false,\n    isRefreshingUser: false,\n    errorMessage: null,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    extraReducers: {\n        [authOperations.register.fulfilled](state, action) {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isLoggedIn = true;\n            state.errorMessage = null;\n        },\n        [authOperations.register.rejected](state, action) {\n            state.errorMessage = action.payload;\n        },\n        [authOperations.logIn.fulfilled](state, action) {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isLoggedIn = true;\n            state.errorMessage = null;\n        },\n        [authOperations.logIn.rejected](state, action) {\n            state.errorMessage = action.payload;\n        },\n        [authOperations.logOut.fulfilled](state, _) {\n            state.user = { name: null, email: null };\n            state.token = null;\n            state.isLoggedIn = false;\n        },\n        [authOperations.fetchCurrentUser.pending](state) {\n            state.isRefreshingUser = true;\n        },\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\n            state.user = action.payload;\n            state.isLoggedIn = true;\n            state.isRefreshingUser = false;\n        },\n        [authOperations.fetchCurrentUser.rejected](state) {\n            state.isRefreshingUser = false;\n        },\n    },\n});\n\nexport default authSlice.reducer;","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsRefreshingUser = state => state.auth.isRefreshingUser;\n\nconst getErrorMessage = state => state.auth.errorMessage;\n\nconst authSelectors = {\n    getIsLoggedIn,\n    getUsername,\n    getIsRefreshingUser,\n    getErrorMessage,\n};\n\nexport default authSelectors;","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'http://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nexport const register = createAsyncThunk('auth/register', async (credentials, thunkAPI) => {\n    try {\n        const { data } = await axios.post('/users/signup', credentials);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        return thunkAPI.rejectWithValue('Sorry but user with such name already exists, please try another combination');\n    }\n});\n\nexport const logIn = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n    try {\n        const { data } = await axios.post('/users/login', credentials);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        return thunkAPI.rejectWithValue('Sorry email or password is wrong, please try another combination');\n    }\n});\n\nexport const logOut = createAsyncThunk('auth/logout', async () => {\n    try {\n        await axios.post('/users/logout');\n        token.unset();\n    } catch (error) {\n        return new Error(error.massage);\n    }\n});\n\nexport const fetchCurrentUser = createAsyncThunk(\n    'auth/refresh', \n    async(_, thunkAPI) => {\n        const state = thunkAPI.getState();\n        const persistedToken = state.auth.token;\n\n        if(persistedToken === null) {\n            console.log('there is not token');\n            return thunkAPI.rejectWithValue();\n        }\n\n        token.set(persistedToken);\n        try {\n            const { data } = await axios.get('/users/current');\n            return data;\n        } catch (error) {\n            return error.massage;\n        }\n    },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Appbar_header__P0ILF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import { createAction } from '@reduxjs/toolkit'\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n    children,\n    redirectTo,\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <Route {...routeProps}>\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\n        </Route>\n    );\n};","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n    children,\n    restricted = false,\n    redirectTo = '/',\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    const shouldRedirect = isLoggedIn && restricted;\n    return (\n        <Route {...routeProps}>\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n        </Route>\n    );\n};","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from 'redux/auth';\nimport s from 'component-styles/NavLink.module.css';\n\nconst Navigation = () => {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <div>\n            <NavLink \n                to='/'\n                exact\n                className={s.navLink}\n                activeClassName={s.navActiveLink}\n            >\n                Home\n            </NavLink>\n\n            {isLoggedIn &&\n                <NavLink \n                    to='/contacts'\n                    className={s.navLink}\n                    activeClassName={s.navActiveLink}\n                >\n                    Contacts\n                </NavLink>\n            }\n        </div>\n    );\n};\n\nexport default Navigation;","import { NavLink } from 'react-router-dom';\nimport s from 'component-styles/NavLink.module.css';\n\nconst AuthNav = () => (\n    <div>\n        <NavLink \n            to='/register'\n            className={s.navLink}\n            activeClassName={s.navActiveLink}\n        >\n            Register\n        </NavLink>\n        <NavLink \n            to='/login'\n            className={s.navLink}\n            activeClassName={s.navActiveLink}\n        >\n            Login\n        </NavLink>\n    </div>\n);\n\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/defaultAvatar.2e489267.jpeg\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport defaultAvatar from './defaultAvatar.jpeg';\nimport s from './UserMenu.module.css';\n\nconst UserMenu = () => {\n    const dispatch = useDispatch();\n    const name = useSelector(authSelectors.getUsername);\n\n    return (\n        <div className={s.userWrapper}>\n            <img \n                src={defaultAvatar} \n                alt=\"user\" \n                className={s.userImg}\n            />\n            <p className={s.userWelcome}>Welcome, {name}</p>\n            <button \n                className={s.logOutBtn}\n                onClick={() => dispatch(authOperations.logOut())}\n            >\n                Log out\n            </button>\n        </div>\n    )\n};\n\nexport default UserMenu;","import { useSelector } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport AuthNav from \"../AuthNav\";\nimport UserMenu from \"../UserMenu\";\nimport s from './Appbar.module.css';\nimport { authSelectors } from 'redux/auth';\n\nconst Appbar = () => {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <header className={s.header}>\n            <Navigation />\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </header>\n    );\n};\n\nexport default Appbar;","import { lazy, Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Appbar from 'components/Appbar';\nimport{ authOperations, authSelectors } from './redux/auth';\nimport s from './App.module.css';\n\nconst HomePage = lazy(() => import('./views/HomePage' \n  /* webpackChunkName: \"home-page-view\" */));\nconst NoSuchPageView = lazy(() => import('./views/NoSuchPageView' \n  /* webpackChunkName: \"no-page-view\" */));\nconst Registration = lazy(() => import('./views/Registration' \n  /* webpackChunkName: \"registration-wiew\" */));\nconst Login = lazy(() => import('./views/Login' \n  /* webpackChunkName: \"login-wiew\" */));\nconst ContactsWrapper = lazy(() => import('./components/ContactsWrapper' \n  /* webpackChunkName: \"cotacts\" */));\n\nfunction App () {\n  const dispatch = useDispatch();\n  const isRefreshingUser = useSelector(authSelectors.getIsRefreshingUser);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isRefreshingUser && (\n      <div className={s.container}>\n        <Appbar />\n        \n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Switch>\n            <PublicRoute exact path=\"/\">\n              <HomePage />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted>\n              <Registration />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <Login />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsWrapper />\n            </PrivateRoute>\n\n            <Route component={NoSuchPageView} />\n          </Switch>\n        </Suspense>\n      </div>\n    )\n  )\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { \n  addContactError, \n  addContactSuccess, \n  addContactRequest, \n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess, \n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, action) => action.payload,\n  [addContactError]: (_, action) => action.payload,\n  [deleteContactError]: (_, action) => action.payload,\n});\n  \nexport default combineReducers({\n  items,\n  filter, \n  loading, \n  error,\n});\n\n\n\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {  \n    persistStore,\n    persistReducer,\n    FLUSH, \n    REHYDRATE, \n    PAUSE, \n    PERSIST, \n    PURGE, \n    REGISTER \n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger'\nimport contactsReducer from './contactForm/contacts-reducer';\nimport authReducer from './auth/auth-slice';\n\nconst middleware = [...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }), \n    logger,\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor }  from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}